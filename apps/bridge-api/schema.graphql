### This file was generated by Nexus Schema
### Do not make changes to this file directly


input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

type Company {
  admin: Int!
  creation_date: DateTime!
  cron_enabled: Boolean
  digit8: Int!
  id: Int!
  image: String!
  remote_connect: String
  remote_url: String
  slug: String
  user: String!
}

input CompanyCreateNestedOneWithoutMarketingSourceInput {
  connect: CompanyWhereUniqueInput
  connectOrCreate: CompanyCreateOrConnectWithoutMarketingSourceInput
  create: CompanyCreateWithoutMarketingSourceInput
}

input CompanyCreateOrConnectWithoutMarketingSourceInput {
  create: CompanyCreateWithoutMarketingSourceInput!
  where: CompanyWhereUniqueInput!
}

input CompanyCreateWithoutMarketingSourceInput {
  admin: Int!
  creation_date: DateTime!
  cron_enabled: Boolean
  digit8: Int!
  image: String!
  remote_connect: String
  remote_url: String
  slug: String
  user: String!
}

input CompanyOrderByInput {
  admin: SortOrder
  creation_date: SortOrder
  cron_enabled: SortOrder
  digit8: SortOrder
  id: SortOrder
  image: SortOrder
  remote_connect: SortOrder
  remote_url: SortOrder
  slug: SortOrder
  user: SortOrder
}

input CompanyUpdateOneRequiredWithoutMarketingSourceInput {
  connect: CompanyWhereUniqueInput
  connectOrCreate: CompanyCreateOrConnectWithoutMarketingSourceInput
  create: CompanyCreateWithoutMarketingSourceInput
  update: CompanyUpdateWithoutMarketingSourceInput
  upsert: CompanyUpsertWithoutMarketingSourceInput
}

input CompanyUpdateWithoutMarketingSourceInput {
  admin: IntFieldUpdateOperationsInput
  creation_date: DateTimeFieldUpdateOperationsInput
  cron_enabled: NullableBoolFieldUpdateOperationsInput
  digit8: IntFieldUpdateOperationsInput
  image: StringFieldUpdateOperationsInput
  remote_connect: NullableStringFieldUpdateOperationsInput
  remote_url: NullableStringFieldUpdateOperationsInput
  slug: NullableStringFieldUpdateOperationsInput
  user: StringFieldUpdateOperationsInput
}

input CompanyUpsertWithoutMarketingSourceInput {
  create: CompanyCreateWithoutMarketingSourceInput!
  update: CompanyUpdateWithoutMarketingSourceInput!
}

input CompanyWhereInput {
  AND: [CompanyWhereInput!]
  MarketingSource: MarketingSourceListRelationFilter
  NOT: [CompanyWhereInput!]
  OR: [CompanyWhereInput!]
  admin: IntFilter
  creation_date: DateTimeFilter
  cron_enabled: BoolNullableFilter
  digit8: IntFilter
  id: IntFilter
  image: StringFilter
  remote_connect: StringNullableFilter
  remote_url: StringNullableFilter
  slug: StringNullableFilter
  user: StringFilter
}

input CompanyWhereUniqueInput {
  id: Int
  slug: String
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

type MarketingSource {
  company: Company!
  custom_id: Int!
  id: Int!
  occupier: Int!
  source_name: String!
}

input MarketingSourceCreateInput {
  company: CompanyCreateNestedOneWithoutMarketingSourceInput!
  custom_id: Int!
  imported: Int!
  public: Int!
  source_name: String!
}

input MarketingSourceListRelationFilter {
  every: MarketingSourceWhereInput
  none: MarketingSourceWhereInput
  some: MarketingSourceWhereInput
}

input MarketingSourceOrderByInput {
  company: CompanyOrderByInput
  custom_id: SortOrder
  id: SortOrder
  imported: SortOrder
  occupier: SortOrder
  public: SortOrder
  source_name: SortOrder
}

input MarketingSourceUpdateInput {
  company: CompanyUpdateOneRequiredWithoutMarketingSourceInput
  custom_id: IntFieldUpdateOperationsInput
  imported: IntFieldUpdateOperationsInput
  public: IntFieldUpdateOperationsInput
  source_name: StringFieldUpdateOperationsInput
}

input MarketingSourceWhereInput {
  AND: [MarketingSourceWhereInput!]
  NOT: [MarketingSourceWhereInput!]
  OR: [MarketingSourceWhereInput!]
  company: CompanyWhereInput
  custom_id: IntFilter
  id: IntFilter
  imported: IntFilter
  occupier: IntFilter
  public: IntFilter
  source_name: StringFilter
}

input MarketingSourceWhereUniqueInput {
  id: Int
}

type Mutation {
  createOneMarketingSource(data: MarketingSourceCreateInput!): MarketingSource!
  deleteOneMarketingSource(where: MarketingSourceWhereUniqueInput!): MarketingSource
  updateOneMarketingSource(data: MarketingSourceUpdateInput!, where: MarketingSourceWhereUniqueInput!): MarketingSource
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Query {
  marketingSource(where: MarketingSourceWhereUniqueInput!): MarketingSource
  marketingSources(after: MarketingSourceWhereUniqueInput, before: MarketingSourceWhereUniqueInput, first: Int, last: Int, orderBy: [MarketingSourceOrderByInput!], where: MarketingSourceWhereInput): [MarketingSource!]!
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}
