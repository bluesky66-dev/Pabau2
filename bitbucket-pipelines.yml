image: node:14-buster

options:
  max-time: 15 # max time in minutes for each step

definitions:
  caches:
    nodemodules: 'node_modules/'
#    nextcache: 'dist/**/.next/cache'
    yarncustom: '/usr/local/share/.cache/yarn'
    nxcache: 'dist/'
    cypress: '/root/.cache/Cypress'
#  services:
#    docker:
#      memory: 2048

pipelines:
  pull-requests:
    '**':
      - step:
          name: PR pipeline
          caches:
            - nodemodules
            - nxcache
            - yarncustom
          script:
            - yarn install --pure-lockfile --prefer-offline
            - yarn affected --base=origin/master --target=lint --with-deps
            - yarn affected --base=origin/master --target=export --prod
    #          - yarn run nx affected --all --target=build
    #          - yarn run nx affected --target=lint --base=master~1
    #          - yarn run nx affected --target=test --base=master~1 --head=master
    #          - yarn run nx affected --target=build --base=master~1

  default:
    - step:
        name: Build and Test branch
        caches:
          - nodemodules
          - nxcache
          - yarncustom
        script:
          - yarn install --pure-lockfile --prefer-offline
          - yarn run nx affected --all --target=lint
#          - yarn run nx affected --all --target=build
#          - yarn run nx affected --target=lint --base=master~1
#          - yarn run nx affected --target=test --base=master~1 --head=master
#          - yarn run nx affected --target=build --base=master~1
  branches:
    master:
      - step:
          #size: 2x
          name: Production
          caches:
            - nodemodules
            - nxcache
            - yarncustom
#            - cypress
          script:
            - yarn install --pure-lockfile --prefer-offline
#            - yarn affected:lint --base=HEAD~1
            - yarn affected:lint --base=HEAD~1 --with-deps
#            - yarn affected:test --base=HEAD~1 --with-deps
#            - yarn affected:build --base=HEAD~1 --prod
#            - apt update -y && apt install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
#            - yarn cypress install || true
#            - yarn affected:e2e --base=HEAD~1 || true

            # Get an oauth access token using the client credentials, parsing out the token with jq.
            - apt-get update && apt-get install -y curl jq
            - >
              export access_token=$(curl -s -X POST -u "${BITBUCKET_CLIENT_ID}:${BITBUCKET_CLIENT_SECRET}" \
                https://bitbucket.org/site/oauth2/access_token \
                -d grant_type=client_credentials -d scopes="repository:write"| jq --raw-output '.access_token')

            # Configure git to use the oauth token.
            - git remote set-url origin "https://x-token-auth:${access_token}@bitbucket.org/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}.git"

            #            - git config user.name "Pipeline"
            #            - git config user.email nobody@pabau.com
            - yarn version --message "[skip ci]" --patch --non-interactive --no-progress
            - git push

            - yarn affected --base=HEAD~2 --target=export --prod
            - yarn affected --base=HEAD~2 --target=deploy --prod
#      - step:
#          size: 2x
#          name: e2e
#          caches:
#            - nextcache
#

